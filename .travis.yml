sudo: required 
dist: trusty 
services:
  - docker
language: generic 
cache:
  - apt
compiler:
  - gcc
notifications:
  email:
    on_success: always
    on_failure: always
env:
  global:
    - ROS_DISTRO=indigo
    - ROS_CI_DESKTOP="`lsb_release -cs`"  # e.g. [precise|trusty|...]
    - CI_SOURCE_PATH=$(pwd)
    - ROSINSTALL_FILE=$CI_SOURCE_PATH/dependencies.rosinstall
    - CATKIN_OPTIONS=$CI_SOURCE_PATH/catkin.options
    - ROS_PARALLEL_JOBS='-j8 -l6'

# Install system dependencies, namely a very barebones ROS setup.
before_install:
  - sudo sh -c "echo \"deb http://packages.ros.org/ros/ubuntu $ROS_CI_DESKTOP main\" > /etc/apt/sources.list.d/ros-latest.list"
  - wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
  - sudo apt-get update -qq
  - sudo apt-get install -y python-catkin-pkg python-rosdep python-wstool ros-$ROS_DISTRO-catkin
  - source /opt/ros/$ROS_DISTRO/setup.bash
  # Prepare rosdep to install dependencies.
  - pip install catkin_pkg
  - pip install empy
  - sudo rosdep init
  - rosdep update
  - sudo apt-get install -y ros-kinetic-cv-bridge ros-kinetic-message-generation ros-kinetic-geometry-msgs ros-kinetic-message-runtime ros-kinetic-std-msgs ros-kinetic-roscpp ros-kinetic-sensor-msgs ros-kinetic-image-transport

install:
  - git clone https://github.com/ros-industrial/industrial_ci.git .ci_config

# Install all dependencies, using wstool and rosdep.
# wstool looks for a ROSINSTALL_FILE defined in the environment variables.
before_script:
  # source dependencies: install using wstool.
  - cd ~/catkin_ws/src
  - wstool init
  - if [[ -f $ROSINSTALL_FILE ]] ; then wstool merge $ROSINSTALL_FILE ; fi
  - wstool up
  # package depdencies: install using rosdep.
  - cd ~/catkin_ws
  - rosdep install -y --from-paths src --ignore-src --rosdistro $ROS_DISTRO

script: 
  - source .ci_config/travis.sh
#  - source ./travis.sh  # Enable this when you have a package-local script
