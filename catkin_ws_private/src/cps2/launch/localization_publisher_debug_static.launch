<?xml version="1.0"?>
<launch>
  <!-- arg <grid_size>: size (in m) of a grid cell of map -->
  <arg name="grid_size" default="1.0" />
  
  <!-- arg <update_interval_min>: do not copy over an existing map piece until at least that many s have passed -->
  <arg name="update_interval_min" default="1" />
  
  <!-- arg <update_interval_max>: always copy over an existing map piece if at least that many s have passed -->
  <arg name="update_interval_max" default="60" />
  
  <!-- arg <logfile>: filename where to store the track data in catkin_ws/../logs/ -->
  <arg name="logfile" default="test" />
  
  <!-- arg <errorfunction>: Which error function to use, where [0|1] correspondes to [pixelwise|centroids] -->
  <arg name="errorfunction" default="0" />
  
  <!-- arg <downscale>: When comparing images, resize them to (width/downscale, height/downscale). -->
  <!-- Boost performance with this! -->
  <arg name="downscale" default="1" />
  
  <!-- arg <kernel_size>: Size of the gaussian kernel used while downscaling. -->
  <arg name="kernel_size" default="1" />
  
  <!-- arg <kernel_stddev>: Standard deviation of the kernel used while downscaling. -->
  <arg name="kernel_stddev" default="1" />
  
  <!-- arg <particles_num>: Number of particles -->
  <arg name="particles_num" default="8" />
  
  <!-- arg <particles_keep>: Percent of particles to keep. The rest is resampled randomly -->
  <arg name="particles_keep" default="1.0" />
  
  <!-- arg <particle_belief_scale>: For a given error e the particle belief b is computet as b=exp( - (particle_belief_scale * e)^2 ). -->
  <arg name="particle_belief_scale" default="4" />
  
  <!-- arg <particle_stddev_lin>: Linear standard deviation (in m) of distribution which is used to resample near a kept particle. -->
  <arg name="particle_stddev_lin" default="0.1" />
  
  <!-- arg <particle_stddev_ang>: Angular standard deviation (in radians) of distribution which is used to resample near a kept particle. -->
  <arg name="particle_stddev_ang" default="0.1" />
  
  <!-- arg <hamid_sampling>: 0|1 = off|on. With Hamid-Sampling, each original particle hit by SUS will be kept as is, without respect to it's belief. -->
  <arg name="hamid_sampling" default="0" />
  
  <!-- arg <bin_size>: Length of a bins side in m. Choose 0 to disable binning. -->
  <arg name="bin_size" default="0" />
  
  <!-- arg <punishEdgeParticlesRate>: multiply belief with this factor. -->
  <arg name="punishEdgeParticlesRate" default="0.5" />

  <!-- arg <setStartPos>: start particle filter with initial position -->
  <arg name="setStartPos" default="1" />

  <!-- arg <startPosX>: start position. -->
  <arg name="startPosX" default="0" />

  <!-- arg <startPosY>: start position. -->
  <arg name="startPosY" default="0" />

  <!-- arg <startPosTh>: start position. -->
  <arg name="startPosTh" default="0" />
  
  <node name="localization_cp2_publisher" pkg="cps2" type="localization_publisher_debug_static" args="$(arg grid_size) $(arg update_interval_min) $(arg update_interval_max) $(arg logfile) $(arg errorfunction) $(arg downscale) $(arg kernel_size) $(arg kernel_stddev) $(arg particles_num) $(arg particles_keep) $(arg particle_belief_scale) $(arg particle_stddev_lin) $(arg particle_stddev_ang) $(arg hamid_sampling) $(arg bin_size) $(arg punishEdgeParticlesRate)  $(arg setStartPos) $(arg startPosX) $(arg startPosY) $(arg startPosTh)" output="screen" />
</launch>
